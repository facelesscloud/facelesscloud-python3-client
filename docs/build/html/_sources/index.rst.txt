.. facelesscloud documentation master file, created by
   sphinx-quickstart on Tue Mar  5 10:52:51 2019.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to facelesscloud's documentation!
=========================================

.. toctree::
   :maxdepth: 2
   :caption: Contents:


USE THE CRYPTOCURRENCY THAT YOU LIKE, TO CREATE AND DEPLOY VPS INFRASTRUCTURE, ANONYMOUSLY.

Look how easy it is to use::

    sudo pip3 install facelesscloud

    facelesscloud makeconf

    facelesscloud spawn -c instance-conf.json


Features
--------

- Easy making data json configuration file to spawn instances.
- Creating spawning request and showing QR-Code to make payment easier.
- Get available Operating System, Region and Instance Type from the facelesscloud API faster.
- Get spawned instance informations, ip, pass, etc.
- Extend death time of an instance.



**SUGGESTION / WARNING**:
PLEASE SAVE SOMEWHERE PRECIOUS YOUR INSTANCES AND TRANSACTIONS INFORMATIONS, FOR FUTUR REFERENCE !!!


Installation
------------

Install facelesscloud Python3 Client by running::

    sudo pip3 install facelesscloud


Subcommand
------------

facelesscloud --help::
    usage: facelesscloud [-h]
                     {get_region,get_os,get_flavor,makeconf,spawn,status,extend}
                     ...
    Subcommands:
        - get_region          
            Return all available Region.
        - get_os              
            Return all available Operating System.
        - get_flavor          
            Return all available Flavor.
        - makeconf            
            Step by step make config file helper.
        - spawn               
            Instance Spawing function.
        - status
            Get Instance/Transaction Status. Returning instance info (IP, Password, etc), if ready
        - extend              
            Instance extend function.



Get Operating System
--------------------

Return a JSON object with all available OS informations and theirs IDs.

Command::

    facelesscloud get_os


Get Flavor
----------

Return a JSON object with all available instance flavors informations and theirs IDs.

Command::

    facelesscloud get_flavor


Get Region
----------

Return a JSON object with all available region cities informations and theirs IDs.

Command::

    facelesscloud get_region


Make Config File
----------------

Simply use the following command and reply the question::

    facelesscloud makeconf


**ARGUMENTS** --:

**Path of config file**:
    Please enter the path you wan to save the instance data, for futur spawn request.

        *(Example: /home/USER/instance.json)*

**Instance leaving time in Hours**:
    Enter how long you want the instance to leave in hours.

        *(Example: 48)*

**Instance Flavor ID**:
    Please refer to "get_flavor" subcommand to get flavor IDs.

        *(Example: 201) 201=(CPU:1, MEM:1gb, SSD:25gb)*

**Operating System ID**:
    Please refer to "get_os" subcommand to get OS (operating system) IDs.

        *(Example: 167) 167=(CentOS 7 64bits)*

**Region, where to deploy the instance**:
    A list/Dict will be generated automatically, from the server. This list will depend of which instance flavor you selected before. Enter the number of the city that you want to deploy your instance.

        *(Example of a Dict generated by the API: {1: 'New Jersey', 2: 'Chicago', 3: 'Dallas', 4: 'Seattle', 5: 'Los Angeles', 6: 'Atlanta', 7: 'Amsterdam', 8: 'London', 9: 'Frankfurt', 10: 'Silicon Valley', 11: 'Sydney', 12: 'Toronto', 13: 'Paris', 14: 'Tokyo', 15: 'Miami', 16: 'Singapore'})*

**SSH Public Key Path**:
    Optional, Enter the path of the public ssh-key that you want to upload to the server when the instance start. If a wrong format of the ssh key was read, you will be advised. Leave it blank if you don't want to upload any ssh key.

        *(Example: /home/USER/.ssh/id_rsa.pub)*

**Kick Start Bash Script**:
    Optional, Enter the path of your BASH script. Please use bash format only.
    The script will be read and POST to the API. The script will run when the instance is created. Leave it blank if you don't want to upload any bash kickstart script.

        *(Example: /home/USER/path_to_your_script/kickstart.sh)*


Spawn Instance
--------------

Simply use the following command for more informations::

    facelesscloud spawn --help

To spawn an instance using the configuration file made with "makeconf" subcommand, use the "--configfile" argument::

    facelesscloud spawn --configfile path_to_conf_file.json

Or use arguments to spawn directly an instance::

    facelesscloud --time 24 --flavor 201 --operating_system 167 --region 1 --sshkey /home/USER/.ssh/id_rsa.pub --kickstart /home/USER/kick.sh

**RETURN**

The command will return Transaction information to proceed. A QR code, reception Bitcoin address, and the currency ammount will be generated and printed to you.
Please follow the instruction and use the subcommand **facelesscloud status --transaction_id** with the provided transaction ID as "--transaction_id" argument to see status of your transaction. Refer to "Get instance and transaction status" section for more informmation.


**SUGGESTION**:
PLEASE SAVE SOMEWHERE PRECIOUS YOUR INSTANCES AND TRANSACTIONS INFORMATIONS, FOR FUTUR REFERENCE !!!


**ARGUMENTS** --:

**--configfile**:

Path of the config File. You can generate one with the subcommand "makeconf".

**--time**:

Instance life time in hours. Default 24.

**--operating_system**:

Operating System ID. Default (167) CentOS 7. Please refer to "get_os" subcommand.

**--region**:

Region location ID. Default (1) New Jersey. Please refer to "get_region" subcommand.

**--flavor**:

Instance Flavor ID. Default (201). CPU:1, MEM:1gb, SSD:25gb. Please refer to "get_flavor" subcommand.

**--kickstart**:

Optional, kickstart Bash Script path to execute at the instance startup.

**--sshkey**:

Opional, Public SSH Key file path.

**--force**:

Ignore parameters checker if True and force sending spawn data. WARN, if True, this will not prompt any confirmation before sending data. Can be used in a script easier.


Get instance and transaction status
-----------------------------------

You made a payment, what's next? You can use this following command to get access to the transaction status or instance informatins, if ready. The transaction ID, provided by "spawn" command, is required as "---transaction_id" argument::

    facelesscloud status --transaction_id 47313246-4ce4-4ed8-b8af-8e5dd92f2a95

**RETURN**:

This command will return Transaction status. An message with more information about the transaction will be provided. Once your instance online, you will get all informations about it. SUBID, Main IP, ROOT temporary password, instance state, etc.

**SUGGESTION**:
PLEASE SAVE SOMEWHERE PRECIOUS YOUR INSTANCES AND TRANSACTIONS INFORMATIONS, FOR FUTUR REFERENCE !!!

**ARGUMENTS** --:

**--transaction_id**:

This arguement is required. Provided by "spawn" subcommand.

    *(Example of transaction ID: "47313246-4ce4-4ed8-b8af-8e5dd92f2a95")*


Extend life of a leaving instance
---------------------------------

You would like to renew or extend your instance life. Easy, simply use this following command.::

    facelesscloud extend --subid 786945 --extendtime 24

**RETURN**:

This command, like "spawn", will return Transaction information to proceed. A QR code, reception Bitcoin address, and the currency ammount will be generated and printed to you. Please follow the instruction and use the subcommand **facelesscloud status --transaction_id** with the provided transaction ID as "--transaction_id" argument to see status of your transaction.
Once payment confirmed, the instance death_time will be extended. See "status" subcommand to get new "death_time" and time extention information.
Refer to "Get instance and transaction status" section for more informmation.


**SUGGESTION**:
PLEASE SAVE SOMEWHERE PRECIOUS YOUR INSTANCES AND TRANSACTIONS INFORMATIONS, FOR FUTUR REFERENCE !!!


**ARGUMENTS** --:

**--subid**:
This arguement is required. Provided by "status" subcommand. Please be sure to provided the correct SUBID. We are pretty sure that you would not like to extend another instance by mistake!

    *(Example of SUBID: "786945")*

**--extendtime**:
Time in hours that you would like to extend.


Contribute
----------

- Source Code: https://github.com/facelesscloud/facelesscloud-python3-client

Support
-------

If you are having issues, please let us know.
We have a mailing list located at:

support@facelesscloud.com

Or, if you want to stay anonymous, please send us a Bitmessage at:

BM-2cUxkUv1uf2ToX8oFw1CCe1iX7eMGC6XUi

License
-------

Do the fuck you want with this.

https://github.com/facelesscloud/facelesscloud-python3-client/blob/master/LICENSE.txt
